{"version":3,"sources":["component/Modal.js","component/Card.js","App.js","reportWebVitals.js","index.js"],"names":["Modal","showModal","person","setShowModal","className","src","picture","medium","alt","name","first","last","dob","age","location","street","number","city","state","postcode","phone","email","Card","useState","onClick","prev","login","uuid","App","people","setPeople","pageNumber","setPageNumber","currentPage","setCurrentPage","fetchData","a","fetch","response","json","data","results","startPeople","displayPeople","slice","map","pageCount","Math","ceil","length","previousLabel","nextLabel","onPageChange","selected","console","log","containerClassName","previousLinkClassName","nextLinkClassName","activeLinkClassName","activeClassName","forcePage","TextField","id","type","value","InputProps","inputProps","max","min","onKeyPress","event","test","key","preventDefault","onChange","e","target","handleChange","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c78f77ee.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Style.css';\r\n\r\nconst Modal = ({showModal, setShowModal, person}) =>{\r\n    return(\r\n        <>\r\n            {showModal? <div className = \"modal\">\r\n                <div className = \"modal-wrapper\">\r\n                    <div className='image-container modal-image-container'>\r\n                        <div className='inner'>\r\n                            <img src={person.picture.medium} alt=\"Profile Pic\" />\r\n                            <h4>{person.name.first + \" \" + person.name.last}</h4>\r\n                        </div>\r\n                    </div>\r\n                    <div className = 'person-info'>\r\n                        <h5>Age</h5>\r\n                        <h4>{person.dob.age + \" years old\"}</h4>\r\n                        <h5>Address</h5>\r\n                        <h4>{person.location.street.number + \" \" + person.location.street.name + \", \" + person.location.city + \", \" + person.location.state + \", \" + person.location.postcode}</h4>\r\n                        <h5>Phone</h5>\r\n                        <h4>{person.phone}</h4>\r\n                        <h5>Email</h5>\r\n                        <h4>{person.email}</h4>\r\n                    </div>\r\n                </div>\r\n                </div> : null}\r\n        </>\r\n\r\n    );\r\n}\r\n\r\nexport default Modal;\r\n\r\n\r\n","import React, { useState } from 'react';\r\nimport './Style.css';\r\nimport Modal from './Modal';\r\n\r\nconst Card = ({person}) =>{\r\n    const [showModal, setShowModal] = useState(false)\r\n    \r\n    // Modal\r\n    const openModal = () =>{\r\n        setShowModal(prev => !prev)\r\n    }\r\n    \r\n    return(\r\n        <div className=\"card-container\" key={`person-id-${person.login.uuid}`}  onClick = {openModal}>\r\n        <div className='image-container'>\r\n          <img src={person.picture.medium} alt=\"Profile Pic\" />\r\n        </div>\r\n        <h4>{person.name.first + \" \" + person.name.last}</h4>\r\n        <Modal showModal={showModal} setShowModal={setShowModal} person = {person}/>\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default Card;\r\n\r\n","import React, { useState } from 'react';\r\nimport ReactPaginate from 'react-paginate';\r\nimport Card from './component/Card';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [people, setPeople] = useState([])\r\n  const [pageNumber, setPageNumber] = useState(0)\r\n  const [currentPage, setCurrentPage] = useState(0)\r\n\r\n  //Fetch Data\r\n  const fetchData = async () => {\r\n\r\n    const url = \"https://api.randomuser.me/?results=200\"\r\n    const response = await fetch(url)\r\n    const data = await response.json()\r\n\r\n    setPeople(data.results);\r\n    setCurrentPage(1)\r\n  };\r\n\r\n  // Pagination\r\n  const peoplePerPage = 10\r\n  const startPeople = pageNumber * peoplePerPage\r\n\r\n  const displayPeople = people.slice(startPeople, startPeople + peoplePerPage).map(person => (\r\n    <Card person = {person} key={`person-id-${person.login.uuid}`}/>\r\n  )\r\n  )\r\n\r\n  const pageCount = Math.ceil(people.length / peoplePerPage) //roundup\r\n  const changePage = ({selected}) => {\r\n    setPageNumber(selected);\r\n    console.log(\"selected\" + selected)\r\n    setCurrentPage(selected+1)\r\n\r\n  };\r\n\r\n  // Page Input\r\n  const handleChange = e =>{\r\n    setPageNumber(e.target.value-1)\r\n    setCurrentPage(e.target.value)\r\n  }\r\n\r\n  // Render\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Random User</h1>\r\n      <h2>Fetch random user data from an API and display</h2>\r\n      <h5>API: https://randomuser.me</h5>\r\n\r\n      {/* Fetch data*/}\r\n      <div>\r\n        <button className=\"fetch-button\" onClick={fetchData}>\r\n          Fetch Data\r\n        </button>\r\n        <br />\r\n      </div>\r\n\r\n      {/* Display data*/}\r\n      <div className=\"people-list\">\r\n\r\n       <div className=\"people-cards\">\r\n        {displayPeople}\r\n       </div>\r\n       \r\n\r\n       <ReactPaginate \r\n        previousLabel = {\"Previous\"}\r\n        nextLabel = {\"Next\"}\r\n        pageCount = {pageCount}\r\n        onPageChange = {changePage}\r\n        containerClassName = {\"page-button\"}\r\n        previousLinkClassName = {\"previous-button\"}\r\n        nextLinkClassName = {\"next-button\"}\r\n        activeLinkClassName = {\"page-active\"}\r\n        activeClassName = {\"page-active\"}\r\n        forcePage={currentPage-1}\r\n       />\r\n\r\n        <div className=\"page-input\">\r\n          <TextField\r\n            id=\"page-input-text\"\r\n            type=\"number\"\r\n            value={currentPage}\r\n            InputProps={{ inputProps: { max: pageCount, min: 1 } }}\r\n            onKeyPress={(event) => {if (!/[0-9]/.test(event.key)) {event.preventDefault();} }} \r\n            onChange={(e) => e.target.value <= pageCount && e.target.value > 0? handleChange(e) : null}>\r\n            {currentPage}\r\n            </TextField>\r\n          <span>/</span>\r\n          <span>{pageCount}</span>\r\n          {/* <div className=\"has-error\">{error.length > 0? <div>{error}</div> :  null}</div> */}\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App\r\n\r\n\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}